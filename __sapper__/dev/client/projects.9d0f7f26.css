.footer.svelte-2kvh42{position:absolute;bottom:0;width:100%;height:60px;line-height:60px;background-color:#f5f5f5}.container.svelte-2kvh42{width:auto;max-width:680px;padding:0 15px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */