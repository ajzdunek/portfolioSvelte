header.svelte-17juqj3.svelte-17juqj3{position:relative;background-color:black;height:100vh;min-height:25rem;width:100%;overflow:hidden}header.svelte-17juqj3 video.svelte-17juqj3{position:absolute;top:50%;left:50%;min-width:100%;min-height:100%;object-fit:cover;width:100%;height:auto;z-index:0;-ms-transform:translateX(-50%) translateY(-50%);-moz-transform:translateX(-50%) translateY(-50%);-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%)}header.svelte-17juqj3 .container.svelte-17juqj3{position:relative;z-index:2}header.svelte-17juqj3 .overlay.svelte-17juqj3{position:absolute;top:0;left:0;height:100%;width:100%;background-color:black;opacity:0.5;z-index:1}.az.svelte-17juqj3.svelte-17juqj3{letter-spacing:10px;font-weight:100 !important}.about-me.svelte-17juqj3.svelte-17juqj3{letter-spacing:2px;font-weight:200}.az-sd.svelte-17juqj3.svelte-17juqj3{position:absolute;bottom:20px;text-align:center;width:100%}.index-fa-github.svelte-17juqj3.svelte-17juqj3{color:white}@media(min-width: 576px){}@media(min-width: 768px){}@media(min-width: 992px){}@media(min-width: 1200px){}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguODE1MjRkNmMuY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9pbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbi8vIE5vdGhpbmcgaGVyZSBhdCB0aGUgbW9tZW50LlxuPC9zY3JpcHQ+XG5cblxuPHN0eWxlPlxuaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgaGVpZ2h0OiAxMDB2aDsgXG4gIG1pbi1oZWlnaHQ6IDI1cmVtO1xuICB3aWR0aDogMTAwJTsgXG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbmhlYWRlciB2aWRlbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgbWluLXdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgei1pbmRleDogMDtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xuICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuaGVhZGVyIC5jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIFxufVxuXG5cbmhlYWRlciAub3ZlcmxheSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgb3BhY2l0eTogMC41O1xuICB6LWluZGV4OiAxO1xufVxuXG4uYXp7XG4gbGV0dGVyLXNwYWNpbmc6IDEwcHg7XG4gZm9udC13ZWlnaHQ6IDEwMCAhaW1wb3J0YW50O1xuXG59XG5cbi5hYm91dC1tZXtcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbn1cblxuLmF6LXNke1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmluZGV4LWZhLWdpdGh1YntcbiBjb2xvcjogd2hpdGU7XG59XG5cblxuXG4vKiBTbWFsbCBkZXZpY2VzIChsYW5kc2NhcGUgcGhvbmVzLCA1NzZweCBhbmQgdXApICovXG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHsgIH1cblxuLyogTWVkaXVtIGRldmljZXMgKHRhYmxldHMsIDc2OHB4IGFuZCB1cCkgKi9cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgeyAgfVxuXG4vKiBMYXJnZSBkZXZpY2VzIChkZXNrdG9wcywgOTkycHggYW5kIHVwKSAqL1xuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7ICB9XG5cbi8qIEV4dHJhIGxhcmdlIGRldmljZXMgKGxhcmdlIGRlc2t0b3BzLCAxMjAwcHggYW5kIHVwKSAqL1xuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkgeyAgfVxuXG5cblxuICBcdC8qIEBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xuXHRcdC53aG9hbWktbW9iaWxlIHtcblx0XHQgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiA1MHB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuXHRcdH1cblx0fSAqL1xuXG5cbjwvc3R5bGU+XG5cbjwhLS0gSFRNTCAtLT5cblxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5BbmRyZXcgWmR1bmVrPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cblxuICAgIDxoZWFkZXI+XG4gICAgICA8ZGl2IGNsYXNzPVwib3ZlcmxheVwiPjwvZGl2PlxuXG4gICAgICA8dmlkZW8gIHBsYXlzaW5saW5lPVwicGxheXNpbmxpbmVcIiBhdXRvcGxheT1cImF1dG9wbGF5XCIgbXV0ZWQ9XCJtdXRlZFwiIGxvb3A9XCJsb29wXCI+XG4gICAgICAgIDxzb3VyY2Ugc3JjPVwiY29kaW5nLXZpZGVvLm1wNFwiIHR5cGU9XCJ2aWRlby9tcDRcIj5cbiAgICAgIDwvdmlkZW8+XG5cdCAgXG4gICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyIGgtMTAwXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggaC0xMDAgdGV4dC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInctMTAwIHRleHQtd2hpdGVcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwid2hvYW1pLW1vYmlsZVwiPlxuICAgICAgICAgICAgPGgxIGNsYXNzPVwiZGlzcGxheS0zIGF6XCI+QW5kcmV3IFpkdW5lazwvaDE+XG4gICAgICAgICAgICA8aDEgY2xhc3M9XCJkaXNwbGF5LTYgYXpcIj5Tb2Z0d2FyZSBEZXZlbG9wZXI8L2gxPlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJweS01IGFib3V0LW1lXCI+QSBzb2Z0d2FyZSBkZXZlbG9wZXIgdHVybmVkIHRlY2huaWNhbCByZWNydWl0ZXIgd2hvJ3MgcGl2b3RpbmcgYmFjayBpbnRvIHRoZSBzb2Z0d2FyZSBkZXZlbG9wbWVudCBzcGFjZS5cbiAgICAgICAgICAgICAgRnJvbSB0aGUgdGltZSBJIHByb2R1Y2VkIG15IGZpcnN0IFwiSGVsbG8gV29ybGRcIiB0byBjcmVhdGluZyBiYW5kL2FydGlzdCBwYWdlcyB3aXRoIEhUTUwsIENTUyBhbmQgbGF0ZXIgZGl2aW5nIGludG8gcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzIFxuICAgICAgICAgICAgICBzdWNoIGFzIEphdmFTY3JpcHQgYW5kIFJ1YnkgSSBrbmV3IHRoYXQgSSBwaWNrZWQgdGhlIHJpZ2h0IGluZHVzdHJ5LiBJdCBoYXMgaGVscGVkIG1lIHRvIGJlIGJvdGggY3JlYXRpdmUgYW5kIHNvbHZlIHByb2JsZW1zLjwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXotc2RcIj5cbiAgICAgICAgICAgICAgPGZvb3Rlcj5BWiB8IFNvZnR3YXJlIERldmVsb3BlbWVudDwvZm9vdGVyPlxuXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXIgcHktMyB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2F6ZHVuZWsvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPjxpIGNsYXNzPVwiZmFiIGZhLWxpbmtlZGluLWluIGZhLTJ4IG1yLTJcIj48L2k+PC9hPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2FqemR1bmVrXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPjxpIGNsYXNzPVwiZmFiIGZhLWdpdGh1YiBpbmRleC1mYS1naXRodWIgZmEtMnggbWwtM1wiPjwvaT48L2E+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3VzZXJzLzkwOTAxNzgvYXpkdW5la1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj48aSBjbGFzcz1cImZhYiBmYS1zdGFjay1vdmVyZmxvdyBmYS0yeCBtbC0zXCI+PC9pPjwvYT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICA8L2hlYWRlcj5cblxuXG5cblxuXG5cbjwhLS0gSFRNTCAtLT5cblxuXG5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQSxNQUFNLDhCQUFDLENBQUMsQUFDTixRQUFRLENBQUUsUUFBUSxDQUNsQixnQkFBZ0IsQ0FBRSxLQUFLLENBQ3ZCLE1BQU0sQ0FBRSxLQUFLLENBQ2IsVUFBVSxDQUFFLEtBQUssQ0FDakIsS0FBSyxDQUFFLElBQUksQ0FDWCxRQUFRLENBQUUsTUFBTSxBQUNsQixDQUFDLEFBRUQscUJBQU0sQ0FBQyxLQUFLLGVBQUMsQ0FBQyxBQUNaLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLEdBQUcsQ0FBRSxHQUFHLENBQ1IsSUFBSSxDQUFFLEdBQUcsQ0FDVCxTQUFTLENBQUUsSUFBSSxDQUNmLFVBQVUsQ0FBRSxJQUFJLENBQ2hCLFVBQVUsQ0FBRSxLQUFLLENBQ2pCLEtBQUssQ0FBRSxJQUFJLENBQ1gsTUFBTSxDQUFFLElBQUksQ0FDWixPQUFPLENBQUUsQ0FBQyxDQUNWLGFBQWEsQ0FBRSxXQUFXLElBQUksQ0FBQyxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQ2hELGNBQWMsQ0FBRSxXQUFXLElBQUksQ0FBQyxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQ2pELGlCQUFpQixDQUFFLFdBQVcsSUFBSSxDQUFDLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FDcEQsU0FBUyxDQUFFLFdBQVcsSUFBSSxDQUFDLENBQUMsV0FBVyxJQUFJLENBQUMsQUFDOUMsQ0FBQyxBQUVELHFCQUFNLENBQUMsVUFBVSxlQUFDLENBQUMsQUFDakIsUUFBUSxDQUFFLFFBQVEsQ0FDbEIsT0FBTyxDQUFFLENBQUMsQUFFWixDQUFDLEFBR0QscUJBQU0sQ0FBQyxRQUFRLGVBQUMsQ0FBQyxBQUNmLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLEdBQUcsQ0FBRSxDQUFDLENBQ04sSUFBSSxDQUFFLENBQUMsQ0FDUCxNQUFNLENBQUUsSUFBSSxDQUNaLEtBQUssQ0FBRSxJQUFJLENBQ1gsZ0JBQWdCLENBQUUsS0FBSyxDQUN2QixPQUFPLENBQUUsR0FBRyxDQUNaLE9BQU8sQ0FBRSxDQUFDLEFBQ1osQ0FBQyxBQUVELGlDQUFHLENBQUMsQUFDSCxjQUFjLENBQUUsSUFBSSxDQUNwQixXQUFXLENBQUUsR0FBRyxDQUFDLFVBQVUsQUFFNUIsQ0FBQyxBQUVELHVDQUFTLENBQUMsQUFDUixjQUFjLENBQUUsR0FBRyxDQUNuQixXQUFXLENBQUUsR0FBRyxBQUNsQixDQUFDLEFBRUQsb0NBQU0sQ0FBQyxBQUNMLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLE1BQU0sQ0FBRSxJQUFJLENBQ1osVUFBVSxDQUFFLE1BQU0sQ0FDbEIsS0FBSyxDQUFFLElBQUksQUFDYixDQUFDLEFBRUQsOENBQWdCLENBQUMsQUFDaEIsS0FBSyxDQUFFLEtBQUssQUFDYixDQUFDLEFBS0QsTUFBTSxBQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUFFLENBQUMsQUFHOUIsTUFBTSxBQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUFFLENBQUMsQUFHOUIsTUFBTSxBQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUFFLENBQUMsQUFHOUIsTUFBTSxBQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUFFLENBQUMifQ== */